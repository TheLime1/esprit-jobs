# Byte-compiled / optimized / DLL files# Logs

__pycache__/*.log

*.py[cod]logs/

*$py.class

# Python

# C extensions__pycache__/

*.so*.py[cod]

*$py.class

# Distribution / packaging

.Python# Runtime data

build/pids/

develop-eggs/*.pid

dist/*.seed

downloads/*.pid.lock

eggs/

.eggs/# Python build

lib/build/

lib64/develop-eggs/

parts/dist/

sdist/downloads/

var/

wheels/# Coverage directory used by tools like istanbuleggs/

pip-wheel-metadata/

share/python-wheels/coverage/.eggs/

*.egg-info/

.installed.cfglib/

*.egg

MANIFEST# Dependency directorieslib64/



# PyInstallernode_modules/parts/

#  Usually these files are written by a python script from a template

#  before PyInstaller builds the exe, so as to inject date/other infos into it.venv/sdist/

*.manifest

*.specenv/var/



# Installer logs.envwheels/

pip-log.txt

pip-delete-this-directory.txtpip-wheel-metadata/



# Unit test / coverage reports# Optional npm cache directoryshare/python-wheels/

htmlcov/

.tox/.npm*.egg-info/

.nox/

.coverage.installed.cfg

.coverage.*

.cache# Optional REPL history*.egg

nosetests.xml

coverage.xml.node_repl_historyMANIFEST

*.cover

*.py,cover

.hypothesis/

.pytest_cache/# Output of 'npm pack'# PyInstaller



# Translations*.tgz*.manifest

*.mo

*.pot*.spec



# Django stuff:# Yarn Integrity file

*.log

local_settings.py.yarn-integrity# Unit test / coverage reports

db.sqlite3

db.sqlite3-journalhtmlcov/



# Flask stuff:# dotenv environment variables file.tox/

instance/

.webassets-cache.env.nox/



# Scrapy stuff:.env.test.coverage

.scrapy

.coverage.*

# Sphinx documentation

docs/_build/# Scraped data.cache



# PyBuilderdocs/nosetests.xml

target/

*.jsoncoverage.xml

# Jupyter Notebook

.ipynb_checkpoints*.xml*.cover



# IPython*.py,cover

profile_default/

ipython_config.py# Browser files.hypothesis/



# pyenv*.crx.pytest_cache/

.python-version

*.xpi

# pipenv

#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.# Selenium

#   However, in case of collaboration, if having platform-specific dependencies or dependencies

#   having no cross-platform support, pipenv may install dependencies that don't work, or not# Pythonchromedriver*

#   install all needed dependencies.

#Pipfile.lock__pycache__/geckodriver*



# PEP 582; used by e.g. github.com/David-OConnor/pyflow*.py[cod]selenium-debug.log

__pypackages__/

*$py.class

# Celery stuff

celerybeat-schedule*.so# Virtual environments

celerybeat.pid

.Python.env

# SageMath parsed files

*.sage.pybuild/.venv



# Environmentsdevelop-eggs/env/

.env

.venvdist/venv/

env/

venv/downloads/ENV/

ENV/

env.bak/eggs/env.bak/

venv.bak/

.eggs/venv.bak/

# Spyder project settings

.spyderprojectlib/

.spyproject

lib64/# IDE

# Rope project settings

.ropeprojectparts/.vscode/



# mkdocs documentationsdist/.idea/

/site

var/*.swp

# mypy

.mypy_cache/wheels/*.swo

.dmypy.json

dmypy.json*.egg-info/



# Pyre type checker.installed.cfg# OS

.pyre/

*.egg.DS_Store

# Project specific

# Configuration files with secrets.DS_Store?

config/secrets.py

# PyInstaller._*

# Output data and logs

data/*.json*.manifest.Spotlight-V100

data/*.html*.spec.Trashes

*.log

scraper_state.jsonehthumbs.db



# Temporary test files# Installer logsThumbs.db

test_*.py

debug_*.pypip-log.txt

*_test.py

*.htmlpip-delete-this-directory.txt# Logs

test_*.json

*.log

# IDE

.vscode/# Unit test / coverage reports

.idea/

*.swphtmlcov/# Local test files

*.swo

.tox/test_*.xml

# OS generated files

.DS_Store.coveragedebug_*.html

.DS_Store?.coverage.*

._*.cache

.Spotlight-V100nosetests.xml

.Trashescoverage.xml

ehthumbs.db*.cover

Thumbs.db.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# pyenv
.python-version

# celery beat schedule file
celerybeat-schedule

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Test secrets configuration
config/secrets.py
